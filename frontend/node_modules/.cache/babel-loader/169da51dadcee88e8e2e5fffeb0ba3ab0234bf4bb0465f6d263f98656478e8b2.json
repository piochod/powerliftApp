{"ast":null,"code":"import Cookies from \"js-cookie\";\nexport const fetchExerciseData = async id => {\n  try {\n    const token = Cookies.get(\"accessToken\");\n    const response = await fetch(`http://localhost:3000/exercise/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (response.status === 200) {\n      const result = await response.json();\n      console.log(result);\n      return result;\n    }\n  } catch (err) {\n    console.log(err);\n    throw err;\n  }\n};","map":{"version":3,"names":["Cookies","fetchExerciseData","id","token","get","response","fetch","method","headers","Authorization","status","result","json","console","log","err"],"sources":["C:/Users/piotr/Desktop/uczelnia/InÅ¼ynierka/frontend/src/utils/fetchUtils.js"],"sourcesContent":["import Cookies from \"js-cookie\";\r\n\r\nexport const fetchExerciseData = async (id) =>{\r\n    try {\r\n      const token = Cookies.get(\"accessToken\");\r\n      const response = await fetch(`http://localhost:3000/exercise/${id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (response.status === 200) {\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return result;\r\n\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      throw err;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAE/B,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,EAAE,IAAI;EAC1C,IAAI;IACF,MAAMC,KAAK,GAAGH,OAAO,CAACI,GAAG,CAAC,aAAa,CAAC;IACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCJ,EAAG,EAAC,EAAE;MACnEK,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASN,KAAM;MACjC;IACF,CAAC,CAAC;IACF,IAAIE,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnB,OAAOA,MAAM;IAEf;EACF,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAChB,MAAMA,GAAG;EACX;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}