{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piotr\\\\Desktop\\\\uczelnia\\\\In\\u017Cynierka\\\\frontend\\\\src\\\\components\\\\Exercises.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercises = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [add, setAdd] = useState(false);\n  const [exerciseName, setExerciseName] = useState('');\n  const [muscleGroup, setMuscleGroup] = useState('');\n  const handlePosting = async () => {\n    try {\n      const token = Cookies.get('accessToken');\n      const response = await fetch('http://localhost:3000/exercise', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          exercise: exerciseName,\n          muscle_group: muscleGroup\n        })\n      });\n      const data = await response.json();\n      if (response.status === 201) {\n        setExerciseName('');\n        setMuscleGroup('');\n        setResults([]);\n        setAdd(false);\n      } else {\n        console.log(data.message || 'An error occurred while adding the exercise.');\n      }\n    } catch (error) {\n      console.error('Error during posting:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: add ? 'searchExercises hidden' : 'searchExercises',\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        setResults: setResults,\n        add: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"searchExercisesList\",\n        children: results.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No exercise found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this) : results.map((result, id) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"noCursor\",\n          children: result.exercise\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAdd(true),\n        children: \"Add new exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: add ? 'addExercise' : 'addExercise hidden',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add your exercise:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Exercise Name\",\n          value: exerciseName,\n          onChange: e => {\n            setExerciseName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: muscleGroup,\n          onChange: e => setMuscleGroup(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Muscle group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), [\"BACK\", \"TRICEPS\", \"GLUTE\", \"SHOULDER\", \"BICEP\", \"AB\", \"LEG\", \"CHEST\"].map(muscle => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: muscle,\n            children: muscle\n          }, muscle, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonsFinishWorkout\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAdd(!add),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePosting(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercises, \"t2qGgYxG1jGWFSFK/LQxSakGtqY=\");\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useState","SearchBar","Cookies","jsxDEV","_jsxDEV","Exercises","_s","results","setResults","add","setAdd","exerciseName","setExerciseName","muscleGroup","setMuscleGroup","handlePosting","token","get","response","fetch","method","headers","body","JSON","stringify","exercise","muscle_group","data","json","status","console","log","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","result","id","onClick","placeholder","value","onChange","e","target","disabled","muscle","_c","$RefreshReg$"],"sources":["C:/Users/piotr/Desktop/uczelnia/InÅ¼ynierka/frontend/src/components/Exercises.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport SearchBar from './SearchBar';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nconst Exercises = () => {\r\n  const [results, setResults] = useState([]);\r\n  const [add, setAdd] = useState(false);\r\n  const [exerciseName, setExerciseName] = useState('');\r\n  const [muscleGroup, setMuscleGroup] = useState('');\r\n\r\n\r\n  const handlePosting = async () => {\r\n    try {\r\n      const token  = Cookies.get('accessToken');\r\n      const response = await fetch('http://localhost:3000/exercise', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          exercise: exerciseName,\r\n          muscle_group: muscleGroup,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.status === 201) {\r\n        setExerciseName('');\r\n        setMuscleGroup('');\r\n        setResults([]);\r\n        setAdd(false);\r\n      } else {\r\n        console.log(data.message || 'An error occurred while adding the exercise.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during posting:', error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='panel'>\r\n      <div className='top'>\r\n        <h1>Exercises</h1>\r\n      </div>\r\n      <div className={add ? 'searchExercises hidden' : 'searchExercises'}>\r\n        <SearchBar setResults={setResults} add={add} />\r\n        <ul className='searchExercisesList'>\r\n          {\r\n            results.length === 0 ? (\r\n              <p>No exercise found</p>\r\n            ) : (\r\n              results.map((result, id) => (\r\n                <li className='noCursor' key={id}>\r\n                  {result.exercise}\r\n                </li>\r\n              )))}\r\n        </ul>\r\n        <button onClick={() => setAdd(true)}>Add new exercise</button>\r\n      </div>\r\n      <div className={add ? 'addExercise' : 'addExercise hidden'}>\r\n        <div className='container'>\r\n          <h2>Add your exercise:</h2>\r\n          <input placeholder='Exercise Name' value={exerciseName} onChange={(e) => {setExerciseName(e.target.value)}} />\r\n          <select\r\n            value={muscleGroup}\r\n            onChange={(e) =>\r\n              setMuscleGroup(e.target.value)\r\n            }\r\n          >\r\n            <option value=\"\" disabled>\r\n              Muscle group\r\n            </option>\r\n            {[\r\n              \"BACK\",\r\n              \"TRICEPS\",\r\n              \"GLUTE\",\r\n              \"SHOULDER\",\r\n              \"BICEP\",\r\n              \"AB\",\r\n              \"LEG\",\r\n              \"CHEST\",\r\n            ].map((muscle) => (\r\n              <option key={muscle} value={muscle}>\r\n                {muscle}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <div className='buttonsFinishWorkout'>\r\n            <button onClick={() => setAdd(!add)}>Back</button>\r\n            <button onClick={() => handlePosting()}>Add</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Exercises\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}