{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piotr\\\\Desktop\\\\uczelnia\\\\In\\u017Cynierka\\\\frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const usernameRef = useRef(null);\n  const passwordRef = useRef(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      username: `${usernameRef.current.value}`,\n      password: `${passwordRef.current.value}`\n    };\n    try {\n      const response = await fetch('http://localhost:3000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.status === 201) {\n        window.location.href = 'http://localhost:3001/login';\n      } else {\n        setErrorMessage(\"Username already taken.\");\n      }\n    } catch (error) {\n      setErrorMessage(\"Failed connecting to the sever.\");\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          ref: usernameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"eqP9faJRtPviu3YJQhr9Wqt2ZsY=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","RegisterPage","_s","usernameRef","passwordRef","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","data","username","current","value","password","response","fetch","method","headers","body","JSON","stringify","status","window","location","href","error","console","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","ref","_c","$RefreshReg$"],"sources":["C:/Users/piotr/Desktop/uczelnia/InÅ¼ynierka/frontend/src/pages/RegisterPage.js"],"sourcesContent":["import React,{useRef, useState} from 'react'\r\nimport './LoginPage.css'\r\n\r\nconst RegisterPage = () => {\r\n\r\n  const usernameRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      username: `${usernameRef.current.value}`,\r\n      password: `${passwordRef.current.value}`,\r\n    };\r\n\r\n    try{\r\n      const response = await fetch('http://localhost:3000/register', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        body: JSON.stringify(data),\r\n      });\r\n      if(response.status=== 201){\r\n        window.location.href = 'http://localhost:3001/login';\r\n      }\r\n      else{\r\n        setErrorMessage(\"Username already taken.\");\r\n      }\r\n    }\r\n    catch(error){\r\n      setErrorMessage(\"Failed connecting to the sever.\");\r\n      console.log(error);\r\n    }\r\n    \r\n  }\r\n  return (\r\n    <div className='loginPage'>\r\n      <div className='container'>\r\n\r\n              <form className='form' onSubmit={handleSubmit}>\r\n                  <h1>Sign up</h1>\r\n                  <input type='text' placeholder='Username' ref={usernameRef}/>\r\n                  <input type='password' placeholder='Password' ref={passwordRef}/>\r\n                  {errorMessage && <div className='error-message'>{errorMessage}</div>}\r\n                  <button type='submit'>Sign up</button>\r\n              </form>  \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterPage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}