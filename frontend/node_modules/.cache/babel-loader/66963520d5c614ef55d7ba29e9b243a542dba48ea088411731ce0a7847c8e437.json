{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piotr\\\\Desktop\\\\uczelnia\\\\In\\u017Cynierka\\\\frontend\\\\src\\\\components\\\\ProgressChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { LineChart, Line, ResponsiveContainer, XAxis, YAxis, Tooltip, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressChart = ({\n  exerciseId\n}) => {\n  _s();\n  const [stats, setStats] = useState([]);\n  const fetchExerciseStats = async exerciseId => {\n    try {\n      const token = Cookies.get(\"accessToken\");\n      const userId = Cookies.get(\"userId\");\n      const response = await fetch(`http://localhost:3000/exercise/${exerciseId}/${userId}/workout-stats`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        const result = await response.json();\n        const maxVolume = Math.max(...result.map(item => item.volume));\n        const maxOrm = Math.max(...result.map(item => item.orm));\n        const normalizedData = result.map(item => ({\n          ...item,\n          volumePercentage: maxVolume > 0 ? item.volume / maxVolume * 100 : 0,\n          // Normalize volume\n          ormPercentage: maxOrm > 0 ? item.orm / maxOrm * 100 : 0 // Normalize ORM\n        }));\n        setStats(normalizedData);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    setStats([]);\n    fetchExerciseStats(exerciseId);\n  }, [exerciseId]);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    minWidth: 500,\n    width: \"100%\",\n    height: 500,\n    style: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 500,\n      height: 550,\n      data: stats,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        stroke: \"#fff\",\n        grid: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        stroke: \"#fff\",\n        grid: false,\n        tickFormatter: value => `${value}%`,\n        domain: [0, 100]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: ({\n          payload\n        }) => {\n          if (payload && payload.length) {\n            const data = payload[0];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Workout: \", data.payload.workoutName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"1RM: \", data.payload.orm, \" kg (1RM)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Volume: \", data.payload.volume, \" kg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"ormPercentage\",\n        stroke: \"#2563eb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"volumePercentage\",\n        stroke: \"#7c3aed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressChart, \"0S3Drn52W0byrmqqk5yWjZ/TY+E=\");\n_c = ProgressChart;\nexport default ProgressChart;\nvar _c;\n$RefreshReg$(_c, \"ProgressChart\");","map":{"version":3,"names":["React","useEffect","useState","Cookies","LineChart","Line","ResponsiveContainer","XAxis","YAxis","Tooltip","Legend","jsxDEV","_jsxDEV","ProgressChart","exerciseId","_s","stats","setStats","fetchExerciseStats","token","get","userId","response","fetch","method","headers","Authorization","status","result","json","maxVolume","Math","max","map","item","volume","maxOrm","orm","normalizedData","volumePercentage","ormPercentage","err","console","log","minWidth","width","height","style","paddingLeft","paddingRight","children","data","stroke","grid","fileName","_jsxFileName","lineNumber","columnNumber","tickFormatter","value","domain","content","payload","length","padding","workoutName","type","dataKey","_c","$RefreshReg$"],"sources":["C:/Users/piotr/Desktop/uczelnia/InÅ¼ynierka/frontend/src/components/ProgressChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst ProgressChart = ({ exerciseId }) => {\r\n  const [stats, setStats] = useState([]);\r\n\r\n  const fetchExerciseStats = async (exerciseId) => {\r\n    try {\r\n      const token = Cookies.get(\"accessToken\");\r\n      const userId = Cookies.get(\"userId\");\r\n      const response = await fetch(\r\n        `http://localhost:3000/exercise/${exerciseId}/${userId}/workout-stats`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        const result = await response.json();\r\n        const maxVolume = Math.max(...result.map((item) => item.volume));\r\n        const maxOrm = Math.max(...result.map((item) => item.orm));\r\n        const normalizedData = result.map(item => ({\r\n            ...item,\r\n            volumePercentage: maxVolume > 0 ? (item.volume / maxVolume) * 100 : 0, // Normalize volume\r\n            ormPercentage: maxOrm > 0 ? (item.orm / maxOrm) * 100 : 0, // Normalize ORM\r\n          }));\r\n\r\n        setStats(normalizedData);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStats([]);\r\n    fetchExerciseStats(exerciseId);\r\n  }, [exerciseId]);\r\n\r\n  return (\r\n    <ResponsiveContainer\r\n      minWidth={500}\r\n      width=\"100%\"\r\n      height={500}\r\n      style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}\r\n    >\r\n      <LineChart width={500} height={550} data={stats}>\r\n        <XAxis stroke=\"#fff\" grid={false} />\r\n        <YAxis\r\n          stroke=\"#fff\"\r\n          grid={false}\r\n          tickFormatter={(value) => `${value}%`}\r\n          domain={[0, 100]}\r\n        />\r\n        <Tooltip\r\n          content={({ payload }) => {\r\n            if (payload && payload.length) {\r\n              const data = payload[0];\r\n              return (\r\n                <div style={{ padding: \"10px\" }}>\r\n                  <p>Workout: {data.payload.workoutName}</p>\r\n                  <p>1RM: {data.payload.orm} kg (1RM)</p>\r\n                  <p>Volume: {data.payload.volume} kg</p>\r\n                </div>\r\n              );\r\n            }\r\n            return null;\r\n          }}\r\n        />\r\n        <Line type=\"monotone\" dataKey=\"ormPercentage\" stroke=\"#2563eb\" />\r\n        <Line type=\"monotone\" dataKey=\"volumePercentage\" stroke=\"#7c3aed\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default ProgressChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}